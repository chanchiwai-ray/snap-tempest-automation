on:
  workflow_dispatch:
  workflow_call:
    inputs:
      openstack-release:
        description: OpenStack release
        type: string
        required: true
    secrets:
      APP_ID:
        description: The id for the github app used to generate the github app token
        required: true
      APP_PEM:
        description: The PEM file for the github app used to generate the github app token
        required: true

env:
  REPO_OWNER: canonical
  SNAP_REPO_PATH: snap-tempest
  AUTOMATION_REPO_PATH: snap-tempest-automation

jobs:
  update-snapcraft:
    runs-on: ubuntu-latest
    outputs:
      create_pr: ${{ steps.update_snapcraft.outputs.create_pr }}
    steps:
      - name: Checkout ${{ env.SNAP_REPO_PATH }}
        uses: actions/checkout@v4
        with:
          ref: stable/${{ inputs.openstack-release }}
          path: ${{ env.SNAP_REPO_PATH }}
          repository: ${{ env.REPO_OWNER }}/${{ env.SNAP_REPO_PATH }}
      - name: Checkout ${{ env.AUTOMATION_REPO_PATH }}
        uses: actions/checkout@v4
        with:
          ref: main
          path: ${{ env.AUTOMATION_REPO_PATH }}
          repository: ${{ env.REPO_OWNER }}/${{ env.AUTOMATION_REPO_PATH }}
      - name: Install tox
        run: |
          sudo apt-get update
          sudo apt-get install --yes tox
      - name: Update Snapcraft YAML
        id: update_snapcraft
        run: |
          tox -c ${{ env.AUTOMATION_REPO_PATH }}/tox.ini -e release -- \
              --input ${{ env.SNAP_REPO_PATH }}/snap/snapcraft.yaml \
              --output ${{ env.SNAP_REPO_PATH }}/snap/snapcraft.yaml \
              --release ${{ inputs.openstack-release }} \
              --manual-requirements ${{ env.SNAP_REPO_PATH }}/requirements-manual.txt \
              --excluded-plugins ${{ env.SNAP_REPO_PATH }}/excluded-plugins.txt
          cd ${{ env.SNAP_REPO_PATH }} && git diff --exit-code snap/snapcraft.yaml \
              && echo "create_pr=0" >> $GITHUB_OUTPUT \
              || echo "create_pr=1" >> $GITHUB_OUTPUT
      - name: Upload snapcraft.yaml to github artifact
        uses: actions/upload-artifact@v4.1.3
        if: ${{ steps.update_snapcraft.outputs.create_pr == 1 }}
        with:
          name: updated_snapcraft_yaml_${{ inputs.openstack-release }}
          path: ${{ env.SNAP_REPO_PATH }}/snap/snapcraft.yaml

  create-pull-request:
    needs: update-snapcraft
    runs-on: ubuntu-latest
    if: ${{ needs.update-snapcraft.outputs.create_pr == 1 }}
    steps:
    - name: Checkout ${{ env.SNAP_REPO_PATH }}
      uses: actions/checkout@v4
      with:
        ref: stable/${{ inputs.openstack-release }}  # checkout to stable branch for creating PR to this branch
        repository: ${{ env.REPO_OWNER }}/${{ env.SNAP_REPO_PATH }}
    - name: Download snapcraft.yaml from github artifact  # download changes to stable branch
      uses: actions/download-artifact@v4.1.3
      with:
        name: updated_snapcraft_yaml_${{ inputs.openstack-release }}
        path: ./snap
    - uses: actions/create-github-app-token@v1
      id: app_token
      with:
        app-id: ${{ secrets.APP_ID }}
        owner: ${{ env.REPO_OWNER }}
        private-key: ${{ secrets.APP_PEM }}
        repositories: ${{ env.SNAP_REPO_PATH }}
    - name: Create pull request
      uses: canonical/create-pull-request@main
      with:
        upsert: true  # Allow update PRs
        base: stable/${{ inputs.openstack-release }}  # the target branch for the PR
        github-token: ${{ steps.app_token.outputs.token }}
        branch-name: release/${{ inputs.openstack-release }}  # create new branch with the changes as the source branch for the PR
        repository: ${{ env.REPO_OWNER }}/${{ env.SNAP_REPO_PATH }}
        title: "release(${{ inputs.openstack-release }}): update snapcraft.yaml"
        body: "This pull request was generated by https://github.com/canonical/snap-tempest-automation"
        commit-message: |
          release(${{ inputs.openstack-release }}): update snapcraft.yaml

          This commit was generated by https://github.com/canonical/snap-tempest-automation
